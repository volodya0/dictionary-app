[{"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\index.js":"1","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\App.js":"3","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\requests\\request-translator.js":"4","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\requests\\request-database.js":"5","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\dictionaries\\dictionariesContainer.js":"6","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\dictionaries\\dictionaries.js":"7","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\edit\\table\\table.js":"8","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\edit\\table\\parse.js":"9","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\edit\\EditContainer.js":"10","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\dictionaries\\DictionariesContainer.js":"11","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\edit\\input\\InputContainer.js":"12","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\edit\\table\\Table.js":"13","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\edit\\table\\Parse.js":"14","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\dictionaries\\Dictionaries.js":"15","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\requests\\wordsAndCodes.js":"16","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\main\\mainPage.js":"17","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\components\\components.js":"18","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\auth\\AuthContainer.js":"19","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\config.js":"20","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\edit\\input\\Input.js":"21","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\auth\\Inputs.js":"22","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\main\\mainContainer.js":"23","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\store\\store.js":"24","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\Routes.js":"25","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\header.js":"26"},{"size":243,"mtime":1613723420453,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":1610289409922,"results":"29","hashOfConfig":"28"},{"size":399,"mtime":1614288637450,"results":"30","hashOfConfig":"28"},{"size":851,"mtime":1614359698539,"results":"31","hashOfConfig":"28"},{"size":2178,"mtime":1614272424716,"results":"32","hashOfConfig":"28"},{"size":1256,"mtime":1613471273993,"results":"33","hashOfConfig":"28"},{"size":3576,"mtime":1613510978626,"results":"34","hashOfConfig":"28"},{"size":275,"mtime":1612977120140,"results":"35","hashOfConfig":"28"},{"size":596,"mtime":1613210324815,"results":"36","hashOfConfig":"28"},{"size":1934,"mtime":1614361026269,"results":"37","hashOfConfig":"28"},{"size":1558,"mtime":1614361277238,"results":"38","hashOfConfig":"28"},{"size":1172,"mtime":1614290355250,"results":"39","hashOfConfig":"28"},{"size":1033,"mtime":1614359463381,"results":"40","hashOfConfig":"28"},{"size":484,"mtime":1614250682688,"results":"41","hashOfConfig":"28"},{"size":5375,"mtime":1614289923271,"results":"42","hashOfConfig":"28"},{"size":430,"mtime":1614359682128,"results":"43","hashOfConfig":"28"},{"size":1635,"mtime":1614358891454,"results":"44","hashOfConfig":"28"},{"size":1529,"mtime":1614366633381,"results":"45","hashOfConfig":"28"},{"size":3815,"mtime":1614289875488,"results":"46","hashOfConfig":"28"},{"size":556,"mtime":1614286477394,"results":"47","hashOfConfig":"28"},{"size":1822,"mtime":1614367885238,"results":"48","hashOfConfig":"28"},{"size":2464,"mtime":1613816619027,"results":"49","hashOfConfig":"28"},{"size":864,"mtime":1614361135996,"results":"50","hashOfConfig":"28"},{"size":4032,"mtime":1614365486832,"results":"51","hashOfConfig":"28"},{"size":950,"mtime":1614364881430,"results":"52","hashOfConfig":"28"},{"size":1293,"mtime":1614367634112,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"19lvvhz",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"77","usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\index.js",[],["111","112"],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\App.js",[],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\requests\\request-translator.js",[],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\requests\\request-database.js",[],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\dictionaries\\dictionariesContainer.js",["113"],"import React,{useState, useEffect} from 'react'\r\nimport store from '../../store/store'\r\nimport {dictionaryRequests} from '../../requests/request-database'\r\nimport Dictionaries from './dictionaries'\r\n\r\nfunction DictionariesContainer(props){\r\n\t\r\n\tconst [addMode, setAddMode] = useState(false)\r\n\tconst [load, setLoad] = useState(true)\r\n\r\n\tconst state = store.getState()\r\n\tconst uid = state.auth.user.id\r\n\tconst authorized = state.auth.authorized\r\n\r\n\tfunction getDict(){\r\n\t\tif(authorized){\r\n\t\t\tsetLoad(true)\r\n\t\t\tdictionaryRequests.getDictionaries(\r\n\t\t\t\tuid, \r\n\t\t\t\tdictionaries => {store.dispatch({type:\"SET-DIC\", dictionaries}); setLoad(false)},\r\n\t\t\t\terror => alert(error)\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\r\n\tfunction addDict(name, from, to) {\r\n\t\tif (authorized){\r\n\t\t\tsetLoad(true)\r\n\t\t\tdictionaryRequests.addDictionary(\r\n\t\t\t\t{uid, name, from, to, words:0, date:Date.now()},\r\n\t\t\t\t() => {setAddMode(false); getDict()},\r\n\t\t\t\te => alert(e)\r\n\t\t\t)\r\n\t\t}\t\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetDict()\r\n\t}, [])\r\n\r\n\t\r\n\treturn (\r\n\t\t<Dictionaries \r\n\t\t\tdictionaries={state.dictionaries} \r\n\t\t\tuid={state.auth.user.id}\r\n\t\t\tload={load}\r\n\t\t\taddMode={addMode}\r\n\t\t\tsetLoad={setLoad}\r\n\t\t\tsetAddMode={setAddMode}\r\n\t\t\tget={getDict}\r\n\t\t\tadd={addDict}\r\n\t\t/>)\r\n}\r\n\r\nexport default DictionariesContainer\r\n\r\n\r\n",["114","115"],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\dictionaries\\dictionaries.js",["116"],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\edit\\table\\table.js",[],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\edit\\table\\parse.js",[],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\edit\\EditContainer.js",["117","118"],"﻿import React,{useState, useEffect, useCallback} from 'react'\r\nimport {dictionaryRequests}  from '../../requests/request-database'\r\nimport translateRequest from '../../requests/request-translator'\r\nimport InputContainer from './input/InputContainer'\r\nimport {useRouteMatch} from 'react-router-dom'\r\nimport Table from './table/Table'\r\nimport {connect} from 'react-redux'\r\nimport {mapDispatchToPropsGen, mapStateToPropsGen} from '../../store/store'\r\n\r\nconst EditContainer = (props) => {\r\n\r\n\tconst [status, setStatus] = useState('ok')\r\n\tconst uid = props.user.id\r\n\tconst dictId = useRouteMatch().params.id\r\n\tconst dictionary = props.dictionaries.find(dict => dict.date == dictId)\r\n\tconst items = dictionary.items? Object.values(dictionary.items) : []\r\n\r\n\tfunction add(item, onSuccess) {\r\n\t\tsetStatus('request')\r\n\t\titem = {...item,\tdate:Date.now()}\r\n\t\tdictionaryRequests.addItem({\r\n\t\t\tuid,dictId,item,\r\n\t\t\tonSuccess:() => {\r\n\t\t\t\tprops.refreshDictionaries(\r\n\t\t\t\t\t() => {setStatus('success'); onSuccess()},\r\n\t\t\t\t\t() => setStatus('fail')\r\n\t\t\t\t)\r\n\t\t\t},\r\n\t\t\tonFail:() => setStatus('fail')\r\n\t\t})\r\n\t}\r\n\r\n\tfunction remove(itemId) {\r\n\t\tsetStatus('request')\r\n\t\tdictionaryRequests.removeItem({\r\n\t\t\tuid, dictId, itemId,\r\n\t\t\tonSuccess:() => {\r\n\t\t\t\tprops.refreshDictionaries(\r\n\t\t\t\t\t() => setStatus('success'),\r\n\t\t\t\t\t() => setStatus('fail')\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\r\n\tfunction translate(original, onSuccess, onFail) {\r\n\t\ttranslateRequest({original, from:'en', to:'ru', onSuccess, onFail})\r\n\t}\r\n\r\n\tconst refresh = useCallback(() => {\r\n\t\tprops.refreshDictionaries(() => setStatus('success'),() => setStatus('fail'))}, [props])\r\n\t\t\r\n\tuseEffect(() => {\r\n\t\trefresh()\r\n\t}, [refresh])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<InputContainer add={add} translate={translate}/>\r\n\t\t\t<Table status={status} items={items} remove={remove} />\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst Edit_w = connect(mapStateToPropsGen('edit'), mapDispatchToPropsGen('edit'))(EditContainer)\r\n\r\nexport default Edit_w","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\dictionaries\\DictionariesContainer.js",["119"],"import React,{useState, useEffect, useCallback} from 'react'\r\nimport {dictionaryRequests} from '../../requests/request-database'\r\nimport Dictionaries from './Dictionaries'\r\nimport codes from '../../requests/wordsAndCodes'\r\nimport {connect} from 'react-redux'\r\nimport {mapStateToPropsGen, mapDispatchToPropsGen} from '../../store/store'\r\n\r\nfunction DictionariesContainer(props){\r\n\r\n\tconst [addMode, setAddMode] = useState(false)\r\n\tconst [status, setStatus] = useState('ok')\r\n\tconst langArray = Object.entries(codes)\r\n\tconst uid = props.user.id\r\n\r\n\tconst refresh = useCallback(() => {\r\n\t\tsetStatus('request')\r\n\t\tprops.refreshDictionaries(\r\n\t\t\t() => setStatus('success'),\r\n\t\t\t() => setStatus('fail')\r\n\t\t)\r\n\t}, [setStatus])\r\n\t\r\n\tfunction addDict(name, from, to) {\r\n\t\tsetStatus('request')\r\n\t\tdictionaryRequests.addDictionary({\r\n\t\t\tdictionary:{uid, name, from, to, date:Date.now()},\r\n\t\t\tonSuccess:() => {setAddMode(false); refresh()},\r\n\t\t\tonFail:e => alert(e)\r\n\t\t})\r\n\t}\r\n\r\n\tfunction remDict(dictId) {\r\n\t\tsetStatus('request')\r\n\t\tdictionaryRequests.removeDictionary({uid, dictId, onSuccess:() => refresh()})\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\trefresh()\r\n\t}, [refresh])\r\n\t\r\n\treturn (\r\n\t\t<Dictionaries \r\n\t\t\tstatus={status}\r\n\t\t\taddMode={addMode}\r\n\t\t\tlangArray={langArray}\r\n\t\t\trefresh={refresh}\r\n\t\t\tdictionaries={props.dictionaries}\r\n\t\t\tadd={addDict}\r\n\t\t\trem={remDict}\r\n\t\t\tsetAddMode={setAddMode}\r\n\t\t/>)\r\n}\r\n\r\nconst Dictionaries_w = connect(mapStateToPropsGen('dictionaries'), mapDispatchToPropsGen('dictionaries'))(DictionariesContainer)\r\n\r\nexport default Dictionaries_w \r\n\r\n","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\edit\\input\\InputContainer.js",[],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\edit\\table\\Table.js",[],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\edit\\table\\Parse.js",[],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\dictionaries\\Dictionaries.js",[],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\requests\\wordsAndCodes.js",[],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\main\\mainPage.js",[],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\components\\components.js",[],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\auth\\AuthContainer.js",[],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\config.js",[],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\edit\\input\\Input.js",[],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\auth\\Inputs.js",[],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\main\\mainContainer.js",[],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\store\\store.js",[],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\Routes.js",[],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\header.js",[],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":39,"column":5,"nodeType":"126","endLine":39,"endColumn":7,"suggestions":"127"},{"ruleId":"120","replacedBy":"128"},{"ruleId":"122","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":93,"column":18,"nodeType":"132","messageId":"133","endLine":93,"endColumn":28},{"ruleId":"134","severity":1,"message":"135","line":1,"column":1,"nodeType":"136","messageId":"137","fix":"138"},{"ruleId":"139","severity":1,"message":"140","line":15,"column":63,"nodeType":"141","messageId":"137","endLine":15,"endColumn":65},{"ruleId":"124","severity":1,"message":"142","line":21,"column":5,"nodeType":"126","endLine":21,"endColumn":16,"suggestions":"143"},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getDict'. Either include it or remove the dependency array.","ArrayExpression",["146"],["144"],["145"],"no-unused-vars","'setMessage' is assigned a value but never used.","Identifier","unusedVar","unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"147","text":"148"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["149"],"no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},[-1,0],"",{"desc":"152","fix":"153"},"Update the dependencies array to be: [getDict]",{"range":"154","text":"155"},"Update the dependencies array to be: [props]",{"range":"156","text":"157"},[971,973],"[getDict]",[707,718],"[props]"]