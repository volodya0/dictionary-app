[{"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\index.js":"1","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\App.js":"3","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\requests\\request-translator.js":"4","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\requests\\request-database.js":"5","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\dictionaries\\dictionariesContainer.js":"6","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\dictionaries\\dictionaries.js":"7","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\edit\\table\\table.js":"8","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\edit\\table\\parse.js":"9","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\edit\\EditContainer.js":"10","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\dictionaries\\DictionariesContainer.js":"11","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\edit\\input\\InputContainer.js":"12","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\edit\\table\\Table.js":"13","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\edit\\table\\Parse.js":"14","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\dictionaries\\Dictionaries.js":"15","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\requests\\wordsAndCodes.js":"16","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\main\\mainPage.js":"17","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\components\\components.js":"18","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\auth\\AuthContainer.js":"19","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\config.js":"20","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\edit\\input\\Input.js":"21","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\auth\\Inputs.js":"22","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\main\\mainContainer.js":"23","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\store\\store.js":"24","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\Routes.js":"25"},{"size":243,"mtime":1613723420453,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1610289409922,"results":"28","hashOfConfig":"27"},{"size":301,"mtime":1614272365236,"results":"29","hashOfConfig":"27"},{"size":870,"mtime":1613724630713,"results":"30","hashOfConfig":"27"},{"size":2178,"mtime":1614272424716,"results":"31","hashOfConfig":"27"},{"size":1256,"mtime":1613471273993,"results":"32","hashOfConfig":"27"},{"size":3576,"mtime":1613510978626,"results":"33","hashOfConfig":"27"},{"size":275,"mtime":1612977120140,"results":"34","hashOfConfig":"27"},{"size":596,"mtime":1613210324815,"results":"35","hashOfConfig":"27"},{"size":1863,"mtime":1614285785094,"results":"36","hashOfConfig":"27"},{"size":1520,"mtime":1614249863025,"results":"37","hashOfConfig":"27"},{"size":1153,"mtime":1614199078659,"results":"38","hashOfConfig":"27"},{"size":1058,"mtime":1614250038217,"results":"39","hashOfConfig":"27"},{"size":484,"mtime":1614250682688,"results":"40","hashOfConfig":"27"},{"size":5473,"mtime":1614285601869,"results":"41","hashOfConfig":"27"},{"size":344,"mtime":1613591590114,"results":"42","hashOfConfig":"27"},{"size":1590,"mtime":1614285112757,"results":"43","hashOfConfig":"27"},{"size":1497,"mtime":1614285271841,"results":"44","hashOfConfig":"27"},{"size":3593,"mtime":1614286166905,"results":"45","hashOfConfig":"27"},{"size":554,"mtime":1613836109081,"results":"46","hashOfConfig":"27"},{"size":1929,"mtime":1613834744724,"results":"47","hashOfConfig":"27"},{"size":2464,"mtime":1613816619027,"results":"48","hashOfConfig":"27"},{"size":752,"mtime":1614251754733,"results":"49","hashOfConfig":"27"},{"size":3847,"mtime":1614251917114,"results":"50","hashOfConfig":"27"},{"size":1034,"mtime":1614251272223,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"19lvvhz",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"54"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"54"},"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\index.js",[],["113","114"],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\App.js",[],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\requests\\request-translator.js",[],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\requests\\request-database.js",[],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\dictionaries\\dictionariesContainer.js",["115"],"import React,{useState, useEffect} from 'react'\r\nimport store from '../../store/store'\r\nimport {dictionaryRequests} from '../../requests/request-database'\r\nimport Dictionaries from './dictionaries'\r\n\r\nfunction DictionariesContainer(props){\r\n\t\r\n\tconst [addMode, setAddMode] = useState(false)\r\n\tconst [load, setLoad] = useState(true)\r\n\r\n\tconst state = store.getState()\r\n\tconst uid = state.auth.user.id\r\n\tconst authorized = state.auth.authorized\r\n\r\n\tfunction getDict(){\r\n\t\tif(authorized){\r\n\t\t\tsetLoad(true)\r\n\t\t\tdictionaryRequests.getDictionaries(\r\n\t\t\t\tuid, \r\n\t\t\t\tdictionaries => {store.dispatch({type:\"SET-DIC\", dictionaries}); setLoad(false)},\r\n\t\t\t\terror => alert(error)\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\r\n\tfunction addDict(name, from, to) {\r\n\t\tif (authorized){\r\n\t\t\tsetLoad(true)\r\n\t\t\tdictionaryRequests.addDictionary(\r\n\t\t\t\t{uid, name, from, to, words:0, date:Date.now()},\r\n\t\t\t\t() => {setAddMode(false); getDict()},\r\n\t\t\t\te => alert(e)\r\n\t\t\t)\r\n\t\t}\t\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetDict()\r\n\t}, [])\r\n\r\n\t\r\n\treturn (\r\n\t\t<Dictionaries \r\n\t\t\tdictionaries={state.dictionaries} \r\n\t\t\tuid={state.auth.user.id}\r\n\t\t\tload={load}\r\n\t\t\taddMode={addMode}\r\n\t\t\tsetLoad={setLoad}\r\n\t\t\tsetAddMode={setAddMode}\r\n\t\t\tget={getDict}\r\n\t\t\tadd={addDict}\r\n\t\t/>)\r\n}\r\n\r\nexport default DictionariesContainer\r\n\r\n\r\n",["116","117"],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\dictionaries\\dictionaries.js",["118"],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\edit\\table\\table.js",[],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\edit\\table\\parse.js",[],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\edit\\EditContainer.js",["119","120","121","122","123"],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\dictionaries\\DictionariesContainer.js",["124","125"],"import React,{useState, useEffect, useContext} from 'react'\r\nimport {dictionaryRequests} from '../../requests/request-database'\r\nimport Dictionaries from './Dictionaries'\r\nimport codes from '../../requests/wordsAndCodes'\r\nimport {connect} from 'react-redux'\r\nimport {mapStateToPropsGen, mapDispatchToPropsGen} from '../../store/store'\r\n\r\nfunction DictionariesContainer(props){\r\n\r\n\tconst [addMode, setAddMode] = useState(false)\r\n\tconst [status, setStatus] = useState('ok')\r\n\tconst langArray = Object.entries(codes)\r\n\tconst uid = props.user.id\r\n\r\n\tfunction refresh(){\r\n\t\tsetStatus('request')\r\n\t\tprops.refreshDictionaries(\r\n\t\t\t() => setStatus('success'),\r\n\t\t\t() => setStatus('fail')\r\n\t\t)\r\n\t}\r\n\t\r\n\tfunction addDict(name, from, to) {\r\n\t\tsetStatus('request')\r\n\t\tdictionaryRequests.addDictionary({\r\n\t\t\tdictionary:{uid, name, from, to, date:Date.now()},\r\n\t\t\tonSuccess:() => {setAddMode(false); refresh()},\r\n\t\t\tonFail:e => alert(e)\r\n\t\t})\r\n\t}\r\n\r\n\tfunction remDict(dictId) {\r\n\t\tsetStatus('request')\r\n\t\tdictionaryRequests.removeDictionary({uid, dictId, onSuccess:() => refresh()})\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\trefresh()\r\n\t}, [])\r\n\t\r\n\treturn (\r\n\t\t<Dictionaries \r\n\t\t\tstatus={status}\r\n\t\t\taddMode={addMode}\r\n\t\t\tlangArray={langArray}\r\n\t\t\trefresh={refresh}\r\n\t\t\tdictionaries={props.dictionaries}\r\n\t\t\tadd={addDict}\r\n\t\t\trem={remDict}\r\n\t\t\tsetAddMode={setAddMode}\r\n\t\t/>)\r\n}\r\n\r\nconst Dictionaries_w = connect(mapStateToPropsGen('dictionaries'), mapDispatchToPropsGen('dictionaries'))(DictionariesContainer)\r\n\r\nexport default Dictionaries_w \r\n\r\n","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\edit\\input\\InputContainer.js",["126"],"import React,{useState, useEffect} from 'react'\r\nimport Input from './Input' \r\n\r\nfunction InputContainer(props){\r\n\r\n\tconst [original, setOriginal] = useState('')\r\n\tconst [translate, setTranslate] = useState('')\r\n\tconst [description, setDescription] = useState('')\r\n\tconst [translatingStatus, setStatus] = useState('')\r\n\r\n\tuseEffect(() => {\r\n\t\tif(translatingStatus === 'success'){setStatus('')}\r\n\t},[original, translate])\r\n\r\n\tconst clear = () => {\r\n\t\tsetOriginal('')\r\n\t\tsetTranslate('')\r\n\t\tsetDescription('')\r\n\t}\r\n\r\n\tconst translateFunc = () => {\r\n\t\tsetStatus('load')\r\n\t\tprops.translate(\r\n\t\t\toriginal,\r\n\t\t\t(translate) => {\r\n\t\t\t\tsetStatus('success')\r\n\t\t\t\tsetTranslate(translate)\r\n\t\t\t\tsetDescription('Translated-auto')\r\n\t\t\t},\r\n\t\t\t(error) => setStatus('fail')\r\n\t\t)\r\n\t}\r\n\r\n\tconst submit = () => {\r\n\t\tprops.add(\r\n\t\t\t{original, translate, description},\r\n\t\t\tclear,\r\n\t\t\t(e)=> alert(e)\r\n\t\t)\r\n\t}\r\n\r\n\tlet set = {original,setOriginal,translate,setTranslate,description,setDescription}\r\n\r\n\treturn(\r\n\t\t<Input\r\n\t\t\tset={set} \r\n\t\t\tclear={clear} \r\n\t\t\tsubmit={submit}\r\n\t\t\ttranslate={translateFunc}\r\n\t\t\tstatus = {translatingStatus}\r\n\t\t/>)\r\n}\r\n\r\nexport default InputContainer","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\edit\\table\\Table.js",["127"],"import {Error, Loader} from '../../components/components'\r\nimport Parse from './Parse'\r\n\r\nfunction Table({status, items, remove}){ \r\n\treturn(\r\n\t\t<div className=\"list\">\r\n\t\t\t{\r\n\t\t\t\tstatus === 'error'? <tr><td>ERROR</td></tr>: \r\n\t\t\t\tstatus === 'request'? <tr><td><Loader /></td></tr>:\r\n\t\t\t\tstatus === 'success'?\r\n\t\t\t\t\titems === [] ? <h4>This dictionary is empty now</h4>: \r\n\t\t\t\t\t\t<table className=\"table\">\r\n\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col-1\">#</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col-3\">Original</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col-3\">Translate</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col-2\">Description</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col-1\">Date</th>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col-2\">Options</th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\titems.map((item,number) => \r\n\t\t\t\t\t\t\t\t\t\t<Parse \r\n\t\t\t\t\t\t\t\t\t\t\titem = {item} \r\n\t\t\t\t\t\t\t\t\t\t\tnumber = {number+1} \r\n\t\t\t\t\t\t\t\t\t\t\tkey ={item.date} \r\n\t\t\t\t\t\t\t\t\t\t\tremove={remove}\r\n\t\t\t\t\t\t\t\t\t\t/> )\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t<tr>It`s all</tr>\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</table> \r\n\t\t\t\t: <></>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Table","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\edit\\table\\Parse.js",[],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\dictionaries\\Dictionaries.js",["128","129","130"],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\requests\\wordsAndCodes.js",["131"],"export default {\r\n\tenglish:'en',\r\n\trussian:'ru',\r\n\tukrainian:'uk',\r\n\tarabic:'ar',\r\n\tbelarusian:'be',\r\n\tchinese:'zh',\r\n\tfrench:'fr',\r\n\tgerman:'de',\r\n\tgreek:'el',\r\n\titalian:'it',\r\n\tindonesian:'id',\r\n\tjapanese:'ja',\r\n\tkazakh:'kk',\r\n\tkorean:'ko',\r\n\tpolish:'pl',\r\n\tportuguese:'pt',\r\n\tromanian:'rm',\r\n\tspanish:'es',\r\n\tswedish:'sv',\r\n\tturkish:'tr',\r\n}","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\main\\mainPage.js",["132"],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\components\\components.js",[],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\auth\\AuthContainer.js",["133","134","135"],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\config.js",[],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\edit\\input\\Input.js",["136"],"import {Input, Button, Error} from '../../components/components'\r\nimport {NavLink, useHistory} from \"react-router-dom\";\r\n\r\nfunction InputPage(props) {\r\n\tconst set = props.set\r\n\tconst history = useHistory()\r\n\r\n\treturn (\r\n\t\t<form \r\n\t\t\tclassName={'row gy-2 gx-3 align-items-center input-section'}\r\n\t\t\tonSubmit={e => {e.preventDefault(); props.submit()}}\r\n\t\t>\r\n\t\t\t<div className='input-inputs-row'>\r\n\t\t\t\t<Input\r\n\t\t\t\t\tdisabled = {props.status === 'load'}\r\n\t\t\t\t\tid = {'input-original'}\t\r\n\t\t\t\t\tplaceholder =  {'Original'}\r\n\t\t\t\t\tvalue = {set.original}\t\r\n\t\t\t\t\tonChange =\t{e => set.setOriginal(e.target.value)}\t\r\n\t\t\t\t/>\r\n\t\t\t\t<Input\t\r\n\t\t\t\t\tdisabled = {props.status === 'load'}\r\n\t\t\t\t\tid = {'input-translate'}\t\r\n\t\t\t\t\tplaceholder =  {'Translate'}\r\n\t\t\t\t\tvalue = {set.translate}\t\r\n\t\t\t\t\tonChange =\t{e => set.setTranslate(e.target.value)}\t\r\n\t\t\t\t/>\r\n\t\t\t\t<Input\t\r\n\t\t\t\t  disabled = {props.status === 'load'}\r\n\t\t\t\t\tid = {'input-description'}\t\r\n\t\t\t\t\tplaceholder =  {'Description'}\r\n\t\t\t\t\tvalue = {set.description}\t\r\n\t\t\t\t\tonChange =\t{e => set.setDescription(e.target.value)}\t\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"input-buttons-row\">\r\n\t\t\t\t<Button options = {{\r\n\t\t\t\t\ttext:'Back to dictionaries',\r\n\t\t\t\t\tcolor:'secondary',\r\n\t\t\t\t\tonClick:() => history.push('/dictionaries')\r\n\t\t\t\t}}/>\r\n\t\t\t\t<Button options = {{\r\n\t\t\t\t\ttext:'Auto-translate',\r\n\t\t\t\t\tcolor:'primary',\r\n\t\t\t\t\tdisabled: props.set.original === '' || props.status === 'success',\r\n\t\t\t\t\tonClick:props.translate\r\n\t\t\t\t}}/>\r\n\t\t\t\t<Button options = {{\r\n\t\t\t\t\tcolor:'warning',\r\n\t\t\t\t\ttext:'Clear',\r\n\t\t\t\t\tonClick:props.clear,\r\n\t\t\t\t\tdisabled: props.set.original+props.set.translate+props.set.description === ''\r\n\t\t\t\t}}/>\r\n\t\t\t\t<Button options = {{\r\n\t\t\t\t\tcolor:'success',\r\n\t\t\t\t\ttext:'Submit',\r\n\t\t\t\t\tonClick:props.submit,\r\n\t\t\t\t\tdisabled: props.set.original === '' || props.set.translate === ''\r\n\t\t\t\t}}/>\r\n\t\t\t</div>\r\n\t\t\t{props.error? <Error message={props.error}/>:<></>}\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default InputPage","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\auth\\Inputs.js",[],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\main\\mainContainer.js",["137","138","139"],"import React,{useContext, useEffect, useState, useReducer} from 'react';\r\nimport MainPage from './mainPage'\r\nimport {connect} from 'react-redux'\r\nimport {mapDispatchToPropsGen, mapStateToPropsGen} from '../../store/store'\r\n\r\nfunction MainContainer(props){\r\n\r\n\tconst [status, setStatus] = useState('ok')\r\n\r\n\tuseEffect(() => {\t\r\n\t\tsetStatus('request')\r\n\t\tprops.refreshDictionaries(\r\n\t\t\t() => setStatus('success'),\r\n\t\t\t() => setStatus('fail')\r\n\t\t)\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<MainPage \r\n\t\t\tstatus={status}\r\n\t\t\tuser={props.user}\r\n\t\t\tdictCount={props.dictCount}\r\n\t\t\titemsCount={props.itemsCount}\r\n\t\t\tlogOut={props.logOut}\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nconst Main_w = connect(mapStateToPropsGen('main'), mapDispatchToPropsGen('main'))(MainContainer)\r\n\r\nexport default Main_w","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\store\\store.js",["140","141","142","143"],"import {createStore ,combineReducers, applyMiddleware} from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport ReduxThunk from 'redux-thunk';\r\nimport {authRequests, dictionaryRequests} from '../requests/request-database'\r\n\r\nconst initialState = {\r\n  auth:{\r\n    authorized: false,\r\n    user: null\r\n  },\r\n  dictionaries:[]\r\n}\r\n\r\nfunction authReducer(state = {authorized:false, user:{}}, action) {\r\n  switch (action.type) {\r\n    case 'SET-USER':\r\n      return {authorized:true, user:action.user}\r\n    case 'LOGOUT':\r\n      return {authorized:false, user:{}}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nfunction dictReducer(state = [], action) {\r\n  switch (action.type) {\r\n    case 'SET-DICTIONARIES':\r\n      return action.dictionaries\r\n    case 'ADD-DICTIONARY':\r\n      return {...state, [action.dictionary.name] : action.dictionary}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\nconst rootReducer = combineReducers({auth:authReducer, dictionaries:dictReducer})\r\n\r\nconst store = createStore(rootReducer, {}, composeWithDevTools(applyMiddleware(ReduxThunk)))\r\n\r\nexport default store\r\n\r\nexport function mapStateToPropsGen(component){\r\n  switch (component) {\r\n    case 'routes':\r\n      return (state) => {\r\n        return {\r\n          authorized : state.auth.authorized,\r\n        }\r\n      }\r\n    case 'main':\r\n      return (state) => {\r\n        return {\r\n          user : state.auth.user,\r\n          dictCount : state.dictionaries.length,\r\n          itemsCount : state.dictionaries\r\n            .reduce((sum, dict) => {return dict.items ? sum + Object.keys(dict.items).length : sum}, 0)\r\n        }\r\n      }\r\n    case 'dictionaries':\r\n      return (state) => {\r\n        return {\r\n          user : state.auth.user,\r\n          dictionaries: state.dictionaries\r\n        }\r\n      }\r\n    case 'edit':\r\n      return (state) => {\r\n        return {\r\n          user : state.auth.user,\r\n          dictionaries : state.dictionaries\r\n        }\r\n      }\r\n      break;\r\n  \r\n    default:\r\n      return undefined\r\n      break;\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function mapDispatchToPropsGen(component){\r\n  switch (component) {\r\n    case 'auth':\r\n      return (dispatch) => {\r\n        return {\r\n          setUser : (user) => dispatch({type: 'SET-USER', user}),\r\n        }\r\n      }  \r\n    case 'main':\r\n      return (dispatch) => {\r\n        return {\r\n          refreshDictionaries : (onSuccess, onFail) => {\r\n            dictionaryRequests.getDictionaries({\r\n              uid: store.getState().auth.user.id,\r\n              onSuccess: (dictionaries) => {\r\n                dispatch({type:'SET-DICTIONARIES',  dictionaries})\r\n                onSuccess()\r\n              },\r\n              onFail\r\n            })\r\n          },\r\n          logOut : () => {\r\n            authRequests.logOut()\r\n            dispatch({type:'LOGOUT'})\r\n          }\r\n        }\r\n      }  \r\n    case 'dictionaries':\r\n      return (dispatch) => {\r\n        return {\r\n          refreshDictionaries : (onSuccess, onFail) => {\r\n            dictionaryRequests.getDictionaries({\r\n              uid: store.getState().auth.user.id,\r\n              onSuccess: (dictionaries) => {\r\n                dispatch({type:'SET-DICTIONARIES',  dictionaries})\r\n                onSuccess()\r\n              },\r\n              onFail\r\n            })\r\n          },\r\n        }\r\n      }  \r\n    case 'edit':\r\n      return (dispatch) => {\r\n        return {\r\n          refreshDictionaries : (onSuccess, onFail) => {\r\n            dictionaryRequests.getDictionaries({\r\n              uid: store.getState().auth.user.id,\r\n              onSuccess: (dictionaries) => {\r\n                dispatch({type:'SET-DICTIONARIES',  dictionaries})\r\n                onSuccess()\r\n              },\r\n              onFail\r\n            })\r\n          },\r\n        }\r\n      }  \r\n    default:\r\n      return undefined\r\n      break;\r\n  }\r\n}\r\n\r\n","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\Routes.js",["144","145","146","147"],"import React,{useState, useReducer} from 'react'\r\nimport AuthContainer from './auth/AuthContainer'\r\nimport MainPage from './main/mainContainer';\r\nimport Dictionaries from './dictionaries/DictionariesContainer';\r\nimport Edit from './edit/EditContainer'\r\nimport {Loader} from './components/components'\r\nimport {BrowserRouter,Switch,Route, Redirect, useHistory} from 'react-router-dom';\r\nimport {connect} from 'react-redux'\r\nimport {mapStateToPropsGen} from '../store/store'\r\n\r\n\r\n\r\nfunction Routes(props){\r\n\r\n\tif(!props.authorized){\r\n\t\treturn <AuthContainer/>\r\n\t}else{\r\n\t\treturn(\r\n\t\t\t<BrowserRouter>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route path='/main'>\r\n\t\t\t\t\t\t\t<MainPage/>\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path='/dictionaries'>\r\n\t\t\t\t\t\t\t<Dictionaries/>\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path='/edit/:id'>\r\n\t\t\t\t\t\t\t<Edit />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path='/'>\r\n\t\t\t\t\t\t\t<Redirect to='/main'/>\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t</Switch>\r\n\t\t\t</BrowserRouter>\r\n\t\t)\r\n\t}\t\t\t  \r\n}\r\n\r\nconst Routes_w = connect(mapStateToPropsGen('routes'))(Routes)\r\n\r\nexport default Routes_w",{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":39,"column":5,"nodeType":"154","endLine":39,"endColumn":7,"suggestions":"155"},{"ruleId":"148","replacedBy":"156"},{"ruleId":"150","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":93,"column":18,"nodeType":"160","messageId":"161","endLine":93,"endColumn":28},{"ruleId":"162","severity":1,"message":"163","line":1,"column":1,"nodeType":"164","messageId":"165","fix":"166"},{"ruleId":"158","severity":1,"message":"167","line":1,"column":36,"nodeType":"160","messageId":"161","endLine":1,"endColumn":46},{"ruleId":"158","severity":1,"message":"168","line":1,"column":48,"nodeType":"160","messageId":"161","endLine":1,"endColumn":59},{"ruleId":"169","severity":1,"message":"170","line":15,"column":63,"nodeType":"171","messageId":"165","endLine":15,"endColumn":65},{"ruleId":"152","severity":1,"message":"172","line":56,"column":5,"nodeType":"154","endLine":56,"endColumn":7,"suggestions":"173"},{"ruleId":"158","severity":1,"message":"167","line":1,"column":36,"nodeType":"160","messageId":"161","endLine":1,"endColumn":46},{"ruleId":"152","severity":1,"message":"174","line":39,"column":5,"nodeType":"154","endLine":39,"endColumn":7,"suggestions":"175"},{"ruleId":"152","severity":1,"message":"176","line":13,"column":4,"nodeType":"154","endLine":13,"endColumn":25,"suggestions":"177"},{"ruleId":"158","severity":1,"message":"178","line":1,"column":9,"nodeType":"160","messageId":"161","endLine":1,"endColumn":14},{"ruleId":"158","severity":1,"message":"167","line":1,"column":25,"nodeType":"160","messageId":"161","endLine":1,"endColumn":35},{"ruleId":"158","severity":1,"message":"178","line":2,"column":25,"nodeType":"160","messageId":"161","endLine":2,"endColumn":30},{"ruleId":"158","severity":1,"message":"179","line":79,"column":8,"nodeType":"160","messageId":"161","endLine":79,"endColumn":15},{"ruleId":"180","severity":1,"message":"181","line":1,"column":1,"nodeType":"182","endLine":22,"endColumn":2},{"ruleId":"158","severity":1,"message":"183","line":2,"column":25,"nodeType":"160","messageId":"161","endLine":2,"endColumn":34},{"ruleId":"158","severity":1,"message":"179","line":17,"column":8,"nodeType":"160","messageId":"161","endLine":17,"endColumn":15},{"ruleId":"152","severity":1,"message":"184","line":118,"column":5,"nodeType":"154","endLine":118,"endColumn":44,"suggestions":"185"},{"ruleId":"152","severity":1,"message":"186","line":118,"column":6,"nodeType":"187","endLine":118,"endColumn":30},{"ruleId":"158","severity":1,"message":"188","line":2,"column":9,"nodeType":"160","messageId":"161","endLine":2,"endColumn":16},{"ruleId":"158","severity":1,"message":"167","line":1,"column":15,"nodeType":"160","messageId":"161","endLine":1,"endColumn":25},{"ruleId":"158","severity":1,"message":"189","line":1,"column":48,"nodeType":"160","messageId":"161","endLine":1,"endColumn":58},{"ruleId":"152","severity":1,"message":"172","line":16,"column":5,"nodeType":"154","endLine":16,"endColumn":7,"suggestions":"190"},{"ruleId":"158","severity":1,"message":"191","line":6,"column":7,"nodeType":"160","messageId":"161","endLine":6,"endColumn":19},{"ruleId":"192","severity":1,"message":"193","line":74,"column":7,"nodeType":"194","messageId":"195","endLine":74,"endColumn":13},{"ruleId":"192","severity":1,"message":"193","line":78,"column":7,"nodeType":"194","messageId":"195","endLine":78,"endColumn":13},{"ruleId":"192","severity":1,"message":"193","line":143,"column":7,"nodeType":"194","messageId":"195","endLine":143,"endColumn":13},{"ruleId":"158","severity":1,"message":"196","line":1,"column":15,"nodeType":"160","messageId":"161","endLine":1,"endColumn":23},{"ruleId":"158","severity":1,"message":"189","line":1,"column":25,"nodeType":"160","messageId":"161","endLine":1,"endColumn":35},{"ruleId":"158","severity":1,"message":"197","line":6,"column":9,"nodeType":"160","messageId":"161","endLine":6,"endColumn":15},{"ruleId":"158","severity":1,"message":"198","line":7,"column":47,"nodeType":"160","messageId":"161","endLine":7,"endColumn":57},"no-native-reassign",["199"],"no-negated-in-lhs",["200"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getDict'. Either include it or remove the dependency array.","ArrayExpression",["201"],["199"],["200"],"no-unused-vars","'setMessage' is assigned a value but never used.","Identifier","unusedVar","unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"202","text":"203"},"'useContext' is defined but never used.","'useCallback' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["204"],"React Hook useEffect has a missing dependency: 'refresh'. Either include it or remove the dependency array.",["205"],"React Hook useEffect has a missing dependency: 'translatingStatus'. Either include it or remove the dependency array.",["206"],"'Error' is defined but never used.","'history' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'NavCreate' is defined but never used.","React Hook useEffect has missing dependencies: 'validator' and 'values'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setMessage' needs the current value of 'values'.",["207"],"React Hook useEffect has a spread element in its dependency array. This means we can't statically verify whether you've passed the correct dependencies.","SpreadElement","'NavLink' is defined but never used.","'useReducer' is defined but never used.",["208"],"'initialState' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'useState' is defined but never used.","'Loader' is defined but never used.","'useHistory' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"209","fix":"210"},[-1,0],"",{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},{"desc":"211","fix":"219"},"Update the dependencies array to be: [getDict]",{"range":"220","text":"221"},"Update the dependencies array to be: [props]",{"range":"222","text":"223"},"Update the dependencies array to be: [refresh]",{"range":"224","text":"225"},"Update the dependencies array to be: [original, translate, translatingStatus]",{"range":"226","text":"227"},"Update the dependencies array to be: [isTypeLogin, validator, values]",{"range":"228","text":"229"},{"range":"230","text":"223"},[971,973],"[getDict]",[1585,1587],"[props]",[1113,1115],"[refresh]",[398,419],"[original, translate, translatingStatus]",[2881,2920],"[isTypeLogin, validator, values]",[450,452]]