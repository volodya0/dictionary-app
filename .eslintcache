[{"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\index.js":"1","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\App.js":"3","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\requests\\request-translator.js":"4","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\requests\\request-database.js":"5","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\dictionaries\\dictionariesContainer.js":"6","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\dictionaries\\dictionaries.js":"7","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\edit\\table\\table.js":"8","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\edit\\table\\parse.js":"9","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\edit\\EditContainer.js":"10","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\dictionaries\\DictionariesContainer.js":"11","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\edit\\input\\InputContainer.js":"12","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\edit\\table\\Table.js":"13","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\edit\\table\\Parse.js":"14","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\dictionaries\\Dictionaries.js":"15","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\requests\\wordsAndCodes.js":"16","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\main\\mainPage.js":"17","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\components\\components.js":"18","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\context\\Context.js":"19","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\auth\\AuthContainer.js":"20","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\config.js":"21","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\edit\\input\\Input.js":"22","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\auth\\Inputs.js":"23"},{"size":243,"mtime":1613723420453,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1610289409922,"results":"26","hashOfConfig":"25"},{"size":1386,"mtime":1613835342477,"results":"27","hashOfConfig":"25"},{"size":870,"mtime":1613724630713,"results":"28","hashOfConfig":"25"},{"size":2672,"mtime":1613832825741,"results":"29","hashOfConfig":"25"},{"size":1256,"mtime":1613471273993,"results":"30","hashOfConfig":"25"},{"size":3576,"mtime":1613510978626,"results":"31","hashOfConfig":"25"},{"size":275,"mtime":1612977120140,"results":"32","hashOfConfig":"25"},{"size":596,"mtime":1613210324815,"results":"33","hashOfConfig":"25"},{"size":1992,"mtime":1613834929420,"results":"34","hashOfConfig":"25"},{"size":1480,"mtime":1613833606851,"results":"35","hashOfConfig":"25"},{"size":1145,"mtime":1613834289461,"results":"36","hashOfConfig":"25"},{"size":1037,"mtime":1613672398745,"results":"37","hashOfConfig":"25"},{"size":494,"mtime":1613672252402,"results":"38","hashOfConfig":"25"},{"size":5087,"mtime":1613732155319,"results":"39","hashOfConfig":"25"},{"size":344,"mtime":1613591590114,"results":"40","hashOfConfig":"25"},{"size":373,"mtime":1613831276592,"results":"41","hashOfConfig":"25"},{"size":2334,"mtime":1613834666414,"results":"42","hashOfConfig":"25"},{"size":129,"mtime":1613653995198,"results":"43","hashOfConfig":"25"},{"size":3250,"mtime":1613817817213,"results":"44","hashOfConfig":"25"},{"size":554,"mtime":1613723227145,"results":"45","hashOfConfig":"25"},{"size":1929,"mtime":1613834744724,"results":"46","hashOfConfig":"25"},{"size":2464,"mtime":1613816619027,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"19lvvhz",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\index.js",[],["100","101"],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\App.js",["102","103"],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\requests\\request-translator.js",[],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\requests\\request-database.js",[],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\dictionaries\\dictionariesContainer.js",["104"],"import React,{useState, useEffect} from 'react'\r\nimport store from '../../store/store'\r\nimport {dictionaryRequests} from '../../requests/request-database'\r\nimport Dictionaries from './dictionaries'\r\n\r\nfunction DictionariesContainer(props){\r\n\t\r\n\tconst [addMode, setAddMode] = useState(false)\r\n\tconst [load, setLoad] = useState(true)\r\n\r\n\tconst state = store.getState()\r\n\tconst uid = state.auth.user.id\r\n\tconst authorized = state.auth.authorized\r\n\r\n\tfunction getDict(){\r\n\t\tif(authorized){\r\n\t\t\tsetLoad(true)\r\n\t\t\tdictionaryRequests.getDictionaries(\r\n\t\t\t\tuid, \r\n\t\t\t\tdictionaries => {store.dispatch({type:\"SET-DIC\", dictionaries}); setLoad(false)},\r\n\t\t\t\terror => alert(error)\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\r\n\tfunction addDict(name, from, to) {\r\n\t\tif (authorized){\r\n\t\t\tsetLoad(true)\r\n\t\t\tdictionaryRequests.addDictionary(\r\n\t\t\t\t{uid, name, from, to, words:0, date:Date.now()},\r\n\t\t\t\t() => {setAddMode(false); getDict()},\r\n\t\t\t\te => alert(e)\r\n\t\t\t)\r\n\t\t}\t\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetDict()\r\n\t}, [])\r\n\r\n\t\r\n\treturn (\r\n\t\t<Dictionaries \r\n\t\t\tdictionaries={state.dictionaries} \r\n\t\t\tuid={state.auth.user.id}\r\n\t\t\tload={load}\r\n\t\t\taddMode={addMode}\r\n\t\t\tsetLoad={setLoad}\r\n\t\t\tsetAddMode={setAddMode}\r\n\t\t\tget={getDict}\r\n\t\t\tadd={addDict}\r\n\t\t/>)\r\n}\r\n\r\nexport default DictionariesContainer\r\n\r\n\r\n",["105","106"],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\dictionaries\\dictionaries.js",["107"],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\edit\\table\\table.js",[],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\edit\\table\\parse.js",[],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\edit\\EditContainer.js",["108","109","110"],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\dictionaries\\DictionariesContainer.js",["111"],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\edit\\input\\InputContainer.js",["112"],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\edit\\table\\Table.js",[],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\edit\\table\\Parse.js",[],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\dictionaries\\Dictionaries.js",["113","114"],"import React,{useState, createRef, useEffect} from 'react'\r\nimport {Button, Loader, Error} from '../components/components'\r\nimport {useHistory} from 'react-router-dom';\r\n\r\n\r\nfunction Dictionaries(props) {\r\n\tconst status = props.status.type\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<div className='row dictionary-wrapper'>\r\n\t\t\t\t{props.addMode ? \r\n\t\t\t\t\t<AddDictionary \r\n\t\t\t\t\t\tlangArray={props.langArray}\r\n\t\t\t\t\t\tadd={props.add}\r\n\t\t\t\t\t\tcancel={() => {props.setAddMode(false)}}\r\n\t\t\t\t\t/> \r\n\t\t\t\t\t:\r\n\t\t\t\t\t<Info\r\n\t\t\t\t\t\tsetAddMode={props.setAddMode}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}{\r\n\t\t\t\tstatus === 'load'?\r\n\t\t\t\t\t<Loader \r\n\t\t\t\t\t\toptions={{size:60,color:'success'}}\r\n\t\t\t\t\t/>:\r\n\t\t\t\tstatus === 'empty'?\r\n\t\t\t\t\t<div className='my-border'>\r\n\t\t\t\t\t\t<h5>Is Empty</h5>\r\n\t\t\t\t\t\t<Button options = {{\r\n\t\t\t\t\t\t\tclass:'add-dictionary-btn',\r\n\t\t\t\t\t\t\ttext:'Click for create new',\r\n\t\t\t\t\t\t\tonClick:() => {props.setAddMode(true)}\r\n\t\t\t\t\t\t}}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<List\r\n\t\t\t\t\t\tdictionaries ={props.status.dictionaries}\r\n\t\t\t\t\t\trem={props.rem}\r\n\t\t\t\t\t\taddMode={props.addMode}\r\n\t\t\t\t\t\tsetAddMode={props.setAddMode}\r\n\t\t\t\t\t/>\r\n\t\t\t  }\r\n\t\t\t</div>\t\r\n\t\t</div>\r\n\t)\t\r\n}\r\n\r\nexport default Dictionaries\r\n\r\nfunction Info(props) {\r\n\treturn(\r\n\t\t<div className='info-dic'>\r\n\t\t\t<div>\r\n\t\t\t\t<h1>Dictionaries</h1>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<Button options = {{\r\n\t\t\t\t\tclass:'add-dictionary-btn',\r\n\t\t\t\t\ttext:'Create new',\r\n\t\t\t\t\tonClick:() => {props.setAddMode(mode => !mode)}\r\n\t\t\t\t}}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\t\r\n}\r\n\r\nfunction List(props) {\r\n\tconst history = useHistory()\r\n\treturn(\r\n\t\t<div className='row dictionary-list'>\r\n\t\t\t{\r\n\t\t\t\tprops.dictionaries.map(item => {\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<div className='col-sm-4' key={item.name}>\r\n\t\t\t\t\t\t\t<div className='card'>\r\n\t\t\t\t\t\t\t\t<div className='card-body'>\r\n\t\t\t\t\t\t\t\t\t<h5 className='card-title'>{item.name}</h5>\r\n\t\t\t\t\t\t\t\t\t<p className='card-text'>{`From : ${item.from.language}`}</p>\r\n\t\t\t\t\t\t\t\t\t<p className='card-text'>{`To : ${item.to.language}`}</p>\r\n\t\t\t\t\t\t\t\t\t<p className='card-text'>{`Words : ${item.words}`}</p>\r\n\t\t\t\t\t\t\t\t\t<p className='card-text'>{`Created : ${new Date(+item.date).toLocaleString()}`}</p>\r\n\t\t\t\t\t\t\t\t\t<Button options={{\r\n\t\t\t\t\t\t\t\t\t\tcolor: 'success',\r\n\t\t\t\t\t\t\t\t\t\ttext: 'Learn',\r\n\t\t\t\t\t\t\t\t\t\tonClick: () => {alert('learn')}\r\n\t\t\t\t\t\t\t\t\t}} />\r\n\t\t\t\t\t\t\t\t\t<Button options={{\r\n\t\t\t\t\t\t\t\t\t\tcolor: 'primary',\r\n\t\t\t\t\t\t\t\t\t\ttext: 'Edit',\r\n\t\t\t\t\t\t\t\t\t\tonClick: () => {history.push(`/edit/${item.name}/${item.from.code}/${item.to.code}`)}\r\n\t\t\t\t\t\t\t\t\t}} />\r\n\t\t\t\t\t\t\t\t\t<Button options={{\r\n\t\t\t\t\t\t\t\t\t\tcolor: 'warning',\r\n\t\t\t\t\t\t\t\t\t\ttext: 'Delete',\r\n\t\t\t\t\t\t\t\t\t\tonClick: () => {\r\n\t\t\t\t\t\t\t\t\t\t\talert('Are you sirius?')\r\n\t\t\t\t\t\t\t\t\t\t\tprops.rem(item.name)\r\n\t\t\t\t\t\t\t\t\t\t;}\r\n\t\t\t\t\t\t\t\t\t}} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t}\t\r\n\t\t\t{!props.addMode? \r\n\t\t\t\t<div className='col-sm-4' >\r\n\t\t\t\t<div className='card-button-wrapper'>\r\n\t\t\t\t\t<Button options={{\r\n\t\t\t\t\t\tclass: 'card-button',\r\n\t\t\t\t\t\tcolor: 'info',\r\n\t\t\t\t\t\ttext: '+ NEW',\r\n\t\t\t\t\t\tonClick:() => {props.setAddMode(mode => !mode)}\r\n\t\t\t\t\t}} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>:<></>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nfunction AddDictionary(props) {\r\n\r\n\tconst [name, setName] = useState('')\r\n\tconst [selectFrom, setFrom] = useState({code:'en', language:'english'})\r\n\tconst [selectTo, setTo] = useState({code:'ru', language:'russian'})\r\n\r\n\tconst onSelect = (eTarget, type) => {\r\n\t\tconst option = eTarget[eTarget.selectedIndex]\r\n\t\tconst object = {code:option.value, language:option.text}\r\n\t\ttype === 'from' ? setFrom(object) : setTo(object)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tsetName(`${selectFrom.language} - ${selectTo.language}`)\r\n\t}, [selectTo, selectFrom])\r\n\r\nreturn(\r\n\t<form className='dictionary-form'>\r\n\r\n\t\t<label className='form-label my-3 w-100 text-center'><h3>Please input params</h3></label>\r\n\t\t<div class='input-group mb-1'>\r\n\r\n\t\t\t<label className='form-label mx-3'>From:</label>\r\n\t\t\t<select \r\n\t\t\t\tname = 'from'\r\n\t\t\t\tclassName='form-select' \r\n\t\t\t\tvalue = {selectFrom.code} \r\n\t\t\t\tonChange={(e) => onSelect(e.target, 'from')}\r\n\t\t\t\t>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tprops.langArray.map(language => \r\n\t\t\t\t\t\t\t<option  \t\r\n\t\t\t\t\t\t\t\tvalue={language[1]}>\r\n\t\t\t\t\t\t\t\t{language[0]}\r\n\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t</select>\r\n\r\n\t\t\t<label className='form-label mx-3'>To:</label>\r\n\t\t\t<select \r\n\t\t\t\tname='to'\r\n\t\t\t\tclassName='form-select' \r\n\t\t\t\tvalue = {selectTo.code} \r\n\t\t\t\tonChange={(e) => onSelect(e.target, 'to')}\r\n\t\t\t>\r\n\t\t\t\t{\r\n\t\t\t\t\tprops.langArray.map(language => \r\n\t\t\t\t\t\t<option  \t\r\n\t\t\t\t\t\t\tvalue={language[1]}>\r\n\t\t\t\t\t\t\t{language[0]}\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t</select>\r\n\r\n\t\t\t<div className='input-group mt-4 mb-2'>\r\n\t\t\t\t<label className='form-label mx-3'>Name:</label>\r\n\t\t\t\t<input \r\n\t\t\t\t\ttype='text' \r\n\t\t\t\t\tclassName='form-control'  \r\n\t\t\t\t\tvalue={name}\r\n\t\t\t\t\tonChange={(e) => setName(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t</div>\r\n\t\t<Button options = {{\r\n\t\t\tcolor:'success',\r\n\t\t\ttext:'Add',\r\n\t\t\tdisabled: ((name === '')||(selectTo.language === selectFrom.language)),\r\n\t\t\tonClick: () => { \r\n\t\t\tconsole.log('onClick', selectFrom, selectTo)\r\n\t\t\tprops.add(name, selectFrom, selectTo)\r\n\t\t}\t\t\t\r\n\t\t}}/>\r\n\t\t<Button options = {{\r\n\t\t\tcolor:'warning',\r\n\t\t\ttext:'Cancel',\r\n\t\t\tonClick: props.cancel\r\n\t\t}}/>\r\n\t</form>\r\n\t)\r\n}","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\requests\\wordsAndCodes.js",["115"],"export default {\r\n\tenglish:'en',\r\n\trussian:'ru',\r\n\tukrainian:'uk',\r\n\tarabic:'ar',\r\n\tbelarusian:'be',\r\n\tchinese:'zh',\r\n\tfrench:'fr',\r\n\tgerman:'de',\r\n\tgreek:'el',\r\n\titalian:'it',\r\n\tindonesian:'id',\r\n\tjapanese:'ja',\r\n\tkazakh:'kk',\r\n\tkorean:'ko',\r\n\tpolish:'pl',\r\n\tportuguese:'pt',\r\n\tromanian:'rm',\r\n\tspanish:'es',\r\n\tswedish:'sv',\r\n\tturkish:'tr',\r\n}","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\main\\mainPage.js",[],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\components\\components.js",[],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\context\\Context.js",[],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\auth\\AuthContainer.js",["116","117","118"],"import {authRequests} from '../../requests/request-database'\r\nimport {Error, Input, Button, Loader} from '../components/components'\r\nimport {LoginInputs, RegisterInputs} from './Inputs'\r\nimport React,{useState, useEffect} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\n\r\nfunction AuthContainer(props){\r\n\t\r\n\tconst history = useHistory()\r\n\tconst [isTypeLogin, setType] = useState(true)\r\n\tconst [message, setMessage] = useState(null)\r\n\tconst [disabledBtn, setDisabled] = useState(true)\r\n\tconst [loader, setLoader] = useState(false)\r\n\tconst [values, set] = useState({name:'', email:'', password:'', password_:''})\r\n\r\n\tconst mainButtonOptions = {\r\n\t\tcolor: 'success',\r\n\t\tdisabled: loader || disabledBtn,\r\n\t\ttext: isTypeLogin ? 'Log In' : 'Register' ,\r\n\t\tonClick: () => isTypeLogin ? login() : register() \r\n\t}\r\n\r\n\tconst toggleButtonOptions = {\r\n\t\tdisabled:loader,\r\n\t\tcolor:'primary'\t,\r\n\t\ttext: isTypeLogin ? 'Create account' : 'Back to login',\r\n\t\tonClick: () => setType(!isTypeLogin)\r\n\t}\r\n\r\n\tfunction login() {\r\n\t\tsetLoader(true)\r\n\t\tauthRequests.logIn({\r\n\t\t\temail: values.email,\r\n\t\t\tpassword: values.password, \r\n\t\t\tonSuccess: (user) => {\r\n\t\t\t\thistory.push('/main')\r\n\t\t\t\tprops.onLogin(user)\r\n\t\t\t\tsetLoader(false)\r\n\t\t\t},\r\n\t\t\tonFail: (message) => {\r\n\t\t\t\tsetMessage(message)\r\n\t\t\t\tsetLoader(false)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\t\r\n\tfunction register() {\r\n\t\tsetLoader(true)\r\n\t\tauthRequests.create({\r\n\t\t\tname: values.name,\r\n\t\t\temail: values.email,\r\n\t\t\tpassword: values.password, \r\n\t\t\tonSuccess: () => {\r\n\t\t\t\tlogin({\r\n\t\t\t\t\temail: values.email,\r\n\t\t\t\t\tpassword: values.password, \r\n\t\t\t\t\tonSuccess: (user) => {\r\n\t\t\t\t\t\thistory.push('/main')\r\n\t\t\t\t\t\tprops.onLogin(user)\r\n\t\t\t\t\t\tsetLoader(false)\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonFail: (message) => {\r\n\t\t\t\t\t\tsetMessage(message)\r\n\t\t\t\t\t\tsetLoader(false)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tonFail: (message) => {\r\n\t\t\t\tsetLoader(false)\r\n\t\t\t\tsetMessage(message)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tfunction validator(values) {\r\n\t\t\r\n\t\tif([...Object.values(values)].every(val => val === '')) return null\r\n\r\n\t\tif(!isTypeLogin){\r\n\r\n\t\t\tconst nameValid = values.name.length > 2\r\n\t\t\tconst confirm = values.password === values.password_\r\n\r\n\t\t\tif(!nameValid)\treturn 'Invalid name'\r\n\t\t\tif(!confirm)\treturn 'Invalid password confirm'\r\n\r\n\t\t}\r\n\r\n\t\tconst emailValid = /^.+@.+\\..+$/.test(values.email)\r\n\t\tconst passwordValid = values.password.length > 5\r\n\r\n\t\tif(!emailValid)\treturn 'Invalid email'\r\n\t\tif(!passwordValid)\treturn 'Invalid password'\r\n\r\n\t\treturn null\r\n\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tif (validator(values)) {\r\n\t\t\tsetMessage(validator(values))\r\n\t\t\tsetDisabled(true)\r\n\t\t}else{\r\n\t\t\tsetMessage(null)\r\n\t\t\tsetDisabled(false)\r\n\t\t}\r\n\r\n\t}, [...Object.values(values), isTypeLogin])\r\n\r\n\r\n\r\n\treturn(\r\n\t\t<form className='auth-form'>\r\n\r\n\t\t\t{isTypeLogin \r\n\r\n\t\t\t? \r\n\t\t\t\t<LoginInputs\r\n\t\t\t\t\tset={set}\r\n\t\t\t\t\tvalues={values}\r\n\t\t\t\t\tdisabled={loader}\r\n\t\t\t\t/>\r\n\r\n\t\t\t: \r\n\t\t\t\t<RegisterInputs\r\n\t\t\t\t\tset={set}\r\n\t\t\t\t\tvalues={values}\r\n\t\t\t\t\tdisabled={loader}\r\n\t\t\t\t/>\r\n\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\t<Error message={message}/>\r\n\r\n\t\t\t<div className='auth-buttons-row'>\r\n\r\n\t\t\t\t<Button options={mainButtonOptions}/>\r\n\r\n\t\t\t\t{loader ? <span className='auth-button-loader'><Loader size={15}/></span> : <></>}\r\n\r\n\t\t\t\t<Button options={toggleButtonOptions}/>\r\n\r\n\t\t\t</div>\r\n\r\n\t\t</form>\r\n\t)\r\n\r\n}\r\n\r\nexport default AuthContainer","C:\\Users\\Володимир\\Desktop\\front\\client\\src\\config.js",[],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\edit\\input\\Input.js",["119"],"C:\\Users\\Володимир\\Desktop\\front\\client\\src\\app\\auth\\Inputs.js",[],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":1,"column":25,"nodeType":"126","messageId":"127","endLine":1,"endColumn":34},{"ruleId":"124","severity":1,"message":"128","line":8,"column":36,"nodeType":"126","messageId":"127","endLine":8,"endColumn":46},{"ruleId":"129","severity":1,"message":"130","line":39,"column":5,"nodeType":"131","endLine":39,"endColumn":7,"suggestions":"132"},{"ruleId":"120","replacedBy":"133"},{"ruleId":"122","replacedBy":"134"},{"ruleId":"124","severity":1,"message":"135","line":93,"column":18,"nodeType":"126","messageId":"127","endLine":93,"endColumn":28},{"ruleId":"136","severity":1,"message":"137","line":1,"column":1,"nodeType":"138","messageId":"139","fix":"140"},{"ruleId":"124","severity":1,"message":"141","line":1,"column":48,"nodeType":"126","messageId":"127","endLine":1,"endColumn":59},{"ruleId":"129","severity":1,"message":"142","line":30,"column":6,"nodeType":"131","endLine":30,"endColumn":8,"suggestions":"143"},{"ruleId":"129","severity":1,"message":"130","line":44,"column":5,"nodeType":"131","endLine":44,"endColumn":7,"suggestions":"144"},{"ruleId":"129","severity":1,"message":"145","line":13,"column":4,"nodeType":"131","endLine":13,"endColumn":25,"suggestions":"146"},{"ruleId":"124","severity":1,"message":"147","line":1,"column":25,"nodeType":"126","messageId":"127","endLine":1,"endColumn":34},{"ruleId":"124","severity":1,"message":"148","line":2,"column":25,"nodeType":"126","messageId":"127","endLine":2,"endColumn":30},{"ruleId":"149","severity":1,"message":"150","line":1,"column":1,"nodeType":"151","endLine":22,"endColumn":2},{"ruleId":"124","severity":1,"message":"152","line":2,"column":16,"nodeType":"126","messageId":"127","endLine":2,"endColumn":21},{"ruleId":"129","severity":1,"message":"153","line":110,"column":5,"nodeType":"131","endLine":110,"endColumn":44,"suggestions":"154"},{"ruleId":"129","severity":1,"message":"155","line":110,"column":6,"nodeType":"156","endLine":110,"endColumn":30},{"ruleId":"124","severity":1,"message":"157","line":2,"column":9,"nodeType":"126","messageId":"127","endLine":2,"endColumn":16},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getDict'. Either include it or remove the dependency array.","ArrayExpression",["160"],["158"],["159"],"'setMessage' is assigned a value but never used.","unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"161","text":"162"},"'useCallback' is defined but never used.","React Hook useEffect has missing dependencies: 'dictName' and 'uid'. Either include them or remove the dependency array.",["163"],["164"],"React Hook useEffect has a missing dependency: 'translatingStatus'. Either include it or remove the dependency array.",["165"],"'createRef' is defined but never used.","'Error' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Input' is defined but never used.","React Hook useEffect has missing dependencies: 'validator' and 'values'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setMessage' needs the current value of 'values'.",["166"],"React Hook useEffect has a spread element in its dependency array. This means we can't statically verify whether you've passed the correct dependencies.","SpreadElement","'NavLink' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"167","fix":"168"},[-1,0],"",{"desc":"169","fix":"170"},{"desc":"167","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},"Update the dependencies array to be: [getDict]",{"range":"176","text":"177"},"Update the dependencies array to be: [dictName, uid]",{"range":"178","text":"179"},{"range":"180","text":"177"},"Update the dependencies array to be: [original, translate, translatingStatus]",{"range":"181","text":"182"},"Update the dependencies array to be: [isTypeLogin, validator, values]",{"range":"183","text":"184"},[971,973],"[getDict]",[977,979],"[dictName, uid]",[1237,1239],[398,419],"[original, translate, translatingStatus]",[2610,2649],"[isTypeLogin, validator, values]"]